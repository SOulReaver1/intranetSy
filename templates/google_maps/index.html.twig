{% extends 'base.html.twig' %}

{% block title %}Hello GoogleMapsController!{% endblock %}
{% set title = "La carte" %}
{% set datatable = true %}
{% block header %}
    <p>Pour zoomer / dezoomer sur la carte : <strong>CTRL + MOLETTE DE LA SOURIS</strong></p>
{% endblock %}
{% block stylesheets %}
    <link href="{{asset('assets/js/plugins/semantic/semantic.css')}}" rel="stylesheet">
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key={{google_maps_api_key}}&callback=initMap&libraries=&v=weekly"
      defer
    ></script>
{% endblock %}
{% block body %}
    <div class="container-fluid">
        <div id="map" style="height: 100vh"></div>
        <hr class="mt-5">
        <h1>Les filtres :</h1>
        <h3>Filtrer par fiche :</h3>
        <div class="ui search" id="filtre1">
            <div class="ui icon input w-100">
                <input class="prompt" type="text" placeholder="Rechercher une fiche">
                <i class="search icon"></i>
            </div>
            <div class="results"></div>
        </div>
        <hr class="m-3"/>
        <h3>Filtrer par statut :</h3>
        <div class="ui fluid search selection multiple dropdown" id="filtre">
            <input type="hidden" name="country">
            <i class="dropdown icon"></i>
            <div class="default text">Tout</div>
            <div class="menu">
                {% for statut in statuts %}
                    <div class="item" data-value="{{statut.id}}">
                        <span class="badge" style="background-color: {{statut.color}}">
                            {{statut.color}}
                        </span>
                        {{statut.name}}
                    </div>
                {% endfor %}
            </div>
        </div>
        <button class="btn btn-danger mt-3" id="clearFiltre">Effacer</div>
        <hr class="mt-5">
        <h1>Légende :</h1>
        <table id="legendTable" class="table w-100 table-striped table-bordered dt-table responsive display nowrap">
            <thead>
                <tr>
                    <th>Nom</th>
                    <th>Couleur</th>
                </tr>
            </thead>
            <tbody>
            {% for statut in statuts %}
                <tr>
                    <td>
                        {{statut.name}}
                    </td>
                    <td>
                        <span class="badge" style="background-color: {{statut.color}}">
                        {{statut.color}}
                        </span>
                    </td>
                </tr>
            {% endfor %}
                <tr>
                    <td>
                        Aucun statut de dossier
                    </td>
                    <td>
                        <span class="badge text-white" style="background-color: black">
                            Noir
                        </span>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
{% endblock %}
{% block javascripts %}
    <script src="{{asset('assets/js/plugins/semantic/semantic.js')}}"></script>
    <script>
        var map;
        var geocoder;
        var addresses;
        let markers = [];
        var filtres = {statut: [], fiche: ""};

        $("#filtre").dropdown({
            cache: false,
            saveRemoteData: false,
            clearable: true,
            onChange: (filtre, b, c) => {
                filtres.statut = filtre ? filtre.split(',') : [];
                drawMarker();
            },
            transition: 'drop',
        });

        $("#clearFiltre").on('click', function() {
            $('#filtre').dropdown('clear');  
        });

        function initMap() {
            var latlng = new google.maps.LatLng(46.232192999999995, 2.209666999999996);
            var mapOptions = {
                zoom: 5,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map"), mapOptions);
            fetch('/maps/addresses', {
                method: 'POST'
            }).then(response => response.json())
            .then(res => {
                addresses = res;

                $("#filtre1").search({
                    source: res,
                    clearable: true,
                    transition: 'drop',
                    onSelect: (result) => {
                        filtres.fiche = result.id;
                        drawMarker();
                    },
                    onResultsOpen: () => {
                        filtres.fiche = "";
                        drawMarker();
                    },
                    
                });
                drawMarker();
            })
        }


        function drawMarker(){
            setMapOnAll(null);
            markers = [];
            if(filtres.statut.length !== 0){
                for(var i = 0; i < addresses.length; i++){
                    if(addresses[i].statutId && filtres.statut.includes(addresses[i].statutId.toString())){
                        draw(addresses[i].lat, addresses[i].lng, [addresses[i].title, addresses[i].id, addresses[i].address, addresses[i].route_number, addresses[i].zip_code, addresses[i].city, addresses[i].address_complement, addresses[i].cellphone], addresses[i].color);
                    }else if(addresses[i].statutId === null && filtres.statut.includes("0")){
                        draw(addresses[i].lat, addresses[i].lng, [addresses[i].title, addresses[i].id, addresses[i].address, addresses[i].route_number, addresses[i].zip_code, addresses[i].city, addresses[i].address_complement, addresses[i].cellphone], addresses[i].color);
                    }
                }
            }
            if(filtres.fiche !== ""){
                for(var i = 0; i < addresses.length; i++){
                    if(filtres.fiche == addresses[i].id){
                        draw(addresses[i].lat, addresses[i].lng, [addresses[i].title, addresses[i].id, addresses[i].address, addresses[i].route_number, addresses[i].zip_code, addresses[i].city, addresses[i].address_complement, addresses[i].cellphone], addresses[i].color);
                    }
                }
            }
            if(filtres.statut.length === 0 && filtres.fiche === ""){
                for(var i = 0; i < addresses.length; i++){
                    draw(addresses[i].lat, addresses[i].lng, [addresses[i].title, addresses[i].id, addresses[i].address, addresses[i].route_number, addresses[i].zip_code, addresses[i].city, addresses[i].address_complement, addresses[i].cellphone], addresses[i].color);
                }
            }

            setMapOnAll(map);
        }

        function setMapOnAll(map) {
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        function draw(lat, lng, [name, id, adresse, nbr, zipCode, city, complement, phone], color = 'black'){
            const symbolThree = {
                path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',
                fillColor: color,
                fillOpacity: 1,
                strokeColor: '#000',
                strokeWeight: 1,
                scale: 1
            };

            const information = `
            <div class="container">
                <h1>${name}</h1>
                <div class="row">
                    <div class="col form-group">
                        <label class="form-control-label">Adresse</label>
                        <p class="form-control">${nbr ?? ''} ${adresse ?? ''} ${zipCode ?? ''} ${city ?? ''}</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col form-group">
                        <label class="form-control-label">Complément d'adresse</label>
                        <p class="form-control">${complement ?? ''}</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col form-group">
                        <label class="form-control-label">Téléphone</label>
                        <p class="form-control">${phone ?? ''}</p>
                    </div>
                </div>
                <a href="/${id}" class="btn btn-primary">Voir la fiche</a>
            </div>
            `;

            const infowindow = new google.maps.InfoWindow({
                content: information,
            });

            const marker = new google.maps.Marker({
                icon: symbolThree,
                animation: google.maps.Animation.DROP,
                position: {lat: lat, lng: lng},
                title: name
            })

            marker.addListener('click', (rers) => {
                infowindow.open(map, marker);
                map.setZoom(8);
                map.panTo(marker.position);
                marker.setAnimation(google.maps.Animation.BOUNCE);
                setTimeout(function(){ marker.setAnimation(null); }, 2000);
            })

            markers.push(marker);
        }
    </script>
{% endblock %}

