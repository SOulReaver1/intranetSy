{% extends 'base.html.twig' %}

{% block title %}Hello GoogleMapsController!{% endblock %}
{% set title = "La carte" %}
{% set datatable = true %}
{% block header %}
    <p>Pour zoomer / dezoomer sur la carte : <strong>CTRL + MOLETTE DE LA SOURIS</strong></p>
{% endblock %}
{% block stylesheets %}
    <link href="{{asset('assets/js/plugins/semantic/semantic.css')}}" rel="stylesheet">
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key={{google_maps_api_key}}&callback=initMap&libraries=&v=weekly"
      defer
    ></script>
{% endblock %}
{% block body %}
    <div class="container-fluid">
        <div id="map" style="height: 100vh"></div>
        <hr class="mt-5">
        <h1>Les filtres :</h1>
        <h3>Filtrer par fiche :</h3>
        <select class="ui fluid dropdown search" id="filtre1">
            <option value="" selected="true">Tout</option>
            {% for customer in customers %}
                <option value="{{customer.id}}">{{customer.name}}</option>
            {% endfor %}
        </select>
        <hr class="m-3"/>
        <h3>Filtrer par statut :</h3>
        <select multiple="" class="ui fluid dropdown search" id="filtre">
            <option value="" selected="true">Tout</option>
            <option value="0">Aucun statut</option>
            {% for statut in statuts %}
                <option value="{{statut.id}}">{{statut.name}}</option>
            {% endfor %}
        </select>
        <button class="btn btn-danger mt-3" id="clearFiltre">Effacer</div>
        <hr class="mt-5">
        <h1>LÃ©gende :</h1>
        <table id="legendTable" class="table w-100 dt-table responsive display nowrap">
            <thead>
                <tr>
                    <th>Nom</th>
                    <th>Couleur</th>
                </tr>
            </thead>
            <tbody>
            {% for statut in statuts %}
                <tr>
                    <td>
                        {{statut.name}}
                    </td>
                    <td>
                        <span class="badge" style="background-color: {{statut.color}}">
                        {{statut.color}}
                        </span>
                    </td>
                </tr>
            {% endfor %}
                <tr>
                    <td>
                        Aucun statut de dossier
                    </td>
                    <td>
                        <span class="badge text-white" style="background-color: black">
                            Noir
                        </span>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
{% endblock %}
{% block javascripts %}
    <script src="{{asset('assets/js/plugins/semantic/semantic.js')}}"></script>
    <script>
        var map;
        var geocoder;
        var addresses;
        let markers = [];

        $("#filtre1").dropdown({
            cache: false,
            saveRemoteData: false,
            clearable: true,
            onChange: (filtres, b, c) => {
                drawMarker(filtres);
            },
            transition: 'drop',
        });

        $("#filtre").dropdown({
            cache: false,
            saveRemoteData: false,
            clearable: true,
            onChange: (filtres, b, c) => {
                drawMarker(filtres);
            },
            transition: 'drop',
        });

        $("#clearFiltre").on('click', function() {
            $('#filtre').dropdown('clear');  
        });

        function initMap() {
            var latlng = new google.maps.LatLng(46.232192999999995, 2.209666999999996);
            var mapOptions = {
                zoom: 5,
                center: latlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }
            map = new google.maps.Map(document.getElementById("map"), mapOptions);
            fetch('/maps/addresses', {
                method: 'POST'
            }).then(response => response.json())
            .then(res => {
                addresses = res;
                drawMarker();
            })
        }

        function drawMarker(filtered = []){
            setMapOnAll(null);
            markers = [];
            for(var i = 0; i < addresses.length; i++){
                if(addresses[i].statutId && filtered.includes(addresses[i].statutId.toString())){
                    draw(addresses[i].lat, addresses[i].lng, addresses[i].color);
                }else if(filtered.length === 0){
                    draw(addresses[i].lat, addresses[i].lng, addresses[i].color);
                }else if(addresses[i].statutId === null && filtered.includes("0")){
                    draw(addresses[i].lat, addresses[i].lng, addresses[i].color);
                }else if(addresses[i].id && filtered.includes(addresses[i].id.toString())){
                     draw(addresses[i].lat, addresses[i].lng, addresses[i].color);
                }
            }
            setMapOnAll(map);
        }

        function setMapOnAll(map) {
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        function draw(lat, lng, color = 'black'){
            const symbolThree = {
                path: 'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z',
                fillColor: color,
                fillOpacity: 1,
                strokeColor: '#000',
                strokeWeight: 1,
                scale: 1
            };
            const marker = new google.maps.Marker({
                icon: symbolThree,
                position: {lat: lat, lng: lng}
            })
            markers.push(marker);
        }
    </script>
{% endblock %}

